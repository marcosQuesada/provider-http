apiVersion: http.crossplane.io/v1alpha1
kind: Request
metadata:
  name: xxx-request
spec:
  references:
    - dependsOn:
        apiVersion: v1
        kind: ConfigMap
        name: foobarx
        namespace: default
    - patchesFrom:
        apiVersion: v1
        kind: ConfigMap
        name: foobarx
        namespace: default
        fieldPath: data.auth
      toFieldPath: spec.forProvider.headers.Authorization[0]
    - patchesFrom:
        apiVersion: v1
        kind: ConfigMap
        name: foobarx
        namespace: default
        fieldPath: data.name
      toFieldPath: spec.forProvider.payload.body.name
  forProvider:
    headers:
      Content-Type:
        - "application/json"
      Accept:
        - "application/json"
      Authorization:
        - "Basic BASE64_ENCODED_USER_CREDENTIALS"
    payload:
      baseUrl: http://127.0.0.1:8081/api/v1/pets
      body:
        id: 1112
        name: "fake-simple-name-2"
        color: "simple-color-2"
        price: 123219
        state: "foo-state-2"

    mappings:
      create:
        method: "POST"
        url: .payload.baseUrl
        body:
          id: .payload.body.id
          name: .payload.body.name
          color: .payload.body.color
          price: .payload.body.price
          state: .payload.body.state
      get:
        method: "GET"
        url: (.payload.baseUrl + "/" + .response.body.name)
      update:
        method: "PUT"
        url: (.payload.baseUrl + "/" + .response.body.name)
        body:
          id: .payload.body.id
          name: .payload.body.name
          color: .payload.body.color
          price: .payload.body.price
          state: .payload.body.state
      delete:
        method: "DELETE"
        url: (.payload.baseUrl + "/" + .response.body.name)
  providerConfigRef:
    name: http-conf